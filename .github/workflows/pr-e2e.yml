name: Playwright Tests
on:
  pull_request:
    branches: [ master ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

env:
  GH_TOKEN: ${{ secrets.GithubCliToken }}

jobs:
  e2e-test:
    name: e2e-test
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.44.0-jammy

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      - name: Grant git permission
        run: git config --global --add safe.directory /__w/ts-etl-ui/ts-etl-ui

      - name: Build Angular
        run: npm run build:ci

      - name: Reset MongoDb
        run: PR=${{ github.event.number }} node --env-file .ci.env reset-mongo-db.js

      - name: Run Playwright tests
        run: PR=${{ github.event.number }} npm run test

      - name: Upload current run playwright html result to Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report
          retention-days: 30

      - name: Upload current run allure result to Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: current-allure-result
          path: allure-results
          retention-days: 30

  playwright-allure-report:
    # GitHub CLI is not available in playwright image container, so this needs a seperated job
    name: playwright-allure-report
    needs: [ e2e-test ]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup JDK
        uses: actions/setup-java@v4.2.1
        with:
          distribution: 'microsoft'
          java-version: '21'

      - name: Install dependencies
        run: npm ci

      - name: Download current run allure report from e2e test job
        uses: actions/download-artifact@v4
        with:
          name: current-allure-result  # the artifact name uploaded
          path: allure-results         # the folder name where artifact will be downloaded to

      - name: Fetch previous Playwright run
        id: previous_playwright_run_id
        run: echo "run_id=$(gh run list -w 'Playwright Tests' -s success -L 1 --json databaseId --jq '.[].databaseId')" >> $GITHUB_OUTPUT

      - name: Download allure report from previous run
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ secrets.GithubCliToken }}
          run-id: ${{ steps.previous_playwright_run_id.outputs.run_id }}
          name: allure-report          # the artifact name uploaded
          path: previous-allure-report # the folder name where artifact will be downloaded to

      - name: Copy historical data into current run
        run: cp previous-allure-report/history allure-results/history -r

      - name: Generate allure report
        run: npx allure generate allure-results

      - name: Upload allure report to Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-report
          path: allure-report
          retention-days: 30

  upload-allure-and-playwright-report:
    name: upload-allure-and-playwright-report
    needs: [ playwright-allure-report ]
    if: always()
    runs-on: ubuntu-latest
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Pages
        if: always()
        uses: actions/configure-pages@v4

      - name: Download playwright html from current run
        if: always()
        uses: actions/download-artifact@v4
        with:
          name: playwright-report
          path: all-report/playwright-report

      - name: Download allure report from current run
        if: always()
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: all-report/allure-report

      - name: Upload all report to github-pages
        if: always()
        uses: actions/upload-pages-artifact@v3
        with:
          path: all-report

      - name: Deploy all report to Github Pages
        if: always()
        id: deploy-all-report-to-github
        uses: actions/deploy-pages@v4
        with:
          preview: true

      - name: update job summary
        if: always()
        run: echo "# Deployed all report to ${{ steps.deploy-all-report-to-github.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
