name: Playwright Tests
on:
  pull_request:
    branches: [ master ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

env:
  GH_TOKEN: ${{ secrets.GithubCliToken }}

jobs:
  reset-db:
    name: reset-db
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm i

      - name: Reset MongoDB
        run: PR=${{ github.event.number }} npm run reset-db

  e2e-test:
    needs: [ reset-db ]
    if: always()
    name: e2e-test
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.48.0-jammy
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]
        shardTotal: [ 10 ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm i

      - name: Output Node & NPM info
        run: node --version && npm --version

      - name: Grant git permission
        run: git config --global --add safe.directory /__w/ts-etl-ui/ts-etl-ui

      - name: Build Angular
        run: npm run build:coverage

      - name: Run Playwright tests
        run: PR=${{ github.event.number }} npx playwright test --project=ts-etl-ui --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}

      - name: Upload raw playwright blob data
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: blob-report
          path: blob-report
          if-no-files-found: warn
          retention-days: 1

      - name: Upload raw coverage nyc data
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: e2e_nyc_output
          path: e2e_nyc_output
          if-no-files-found: warn
          retention-days: 1

  generate-report:
    needs: [ e2e-test ]
    if: always()
    name: generate-report
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.48.0-jammy
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm i

      - name: Download raw playwright blob data from Previous job
        uses: actions/download-artifact@v3
        with:
          name: blob-report
          path: blob-report

      - name: Download raw coverage nyc data from Previous job
        uses: actions/download-artifact@v3
        with:
          name: e2e_nyc_output
          path: e2e_nyc_output

      - name: generate nyc coverage report
        if: always()
        run: npx nyc report

      - name: generate playwright report
        if: always()
        run: npx playwright merge-reports --reporter html ./blob-report

      - name: Merge both playwright & coverage report
        if: always()
        run: mv playwright-report coverage-e2e all-report

      - name: Upload all-report to artifactory
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: all-report
          path: all-report
          retention-days: 30

  publish-report:
    needs: [ generate-report ]
    if: always()
    name: publish-report
    runs-on: ubuntu-latest
    steps:
      - name: Download all report from Previous job
        uses: actions/download-artifact@v3
        with:
          name: all-report
          path: all-report

      # this code is commented for now, but in case Azure is unavailable, we revert this code
      #      - name: Upload playwright report to artifact named github-pages # the next step's action expect this exactly artifact name
      #        if: always()
      #        uses: actions/upload-pages-artifact@v3
      #        with:
      #          path: all-report
      #
      #      - name: Deploy playwright report to GitHub Pages
      #        if: always()
      #        id: deploy-playwright-report-to-github-page
      #        uses: actions/deploy-pages@v4
      #        with:
      #          preview: true
      #
      #      - name: update job summary
      #        if: always()
      #        run: echo "# Deployed playwright report to ${{ steps.deploy-playwright-report-to-github-page.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Upload all-report to Azure
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az storage blob upload-batch --account-name tsetlui -s ./all-report -d ts-etl-ui --destination-path ${{github.event.pull_request.number}} --overwrite

      - name: update job summary
        if: always()
        run: |
          echo "# Deployed all report to https://tsetlui.blob.core.windows.net/ts-etl-ui/${{github.event.pull_request.number}}/index.html" >> $GITHUB_STEP_SUMMARY



  # This allows us to have a branch protection rule for playwright test with matrix
  test-status:
    needs: [ e2e-test ]
    if: always()
    name: Status check for matrix jobs
    runs-on: ubuntu-latest
    steps:
      - name: All jobs ran successful.
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: Not all jobs ran successful.
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1